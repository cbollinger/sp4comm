#+CATEGORY: SP4COMM W2:

# #+LATEX_CLASS: koma-report                                   
# #+LATEX_HEADER: \input{../dsp_setup.tex}

* Vector Spaces
#+ATTR_LATEX: :options [logo=\bcbook, couleur=yellow!10, barre=snake, arrondi=0.1]{Vector Space}
#+BEGIN_bclogo
Vector spaces build among others a common framework to work with the four classes of signals:
- Finite Length Signal
- Infinte Length Signal
- Periodic Signal
- Finite Support Signal

Finite length and periodic signal, i.e. the "practical signal processing"  live in the
$\mathbb{C}^N$ Space.
To represent infinite length signals we need something more. We require sequneces to be
square-summabe $\sum_{n=-\infty}^{\infty} |x[n]|^2$
#+END_bclogo


- Why using vector space in DSP :: Easier math and unified framework for signal processing:
  - same framework for different classes of signals
  - same framework for continous-time signals
  - easy explanation of the Fourier Transform
  - easy explanation of sampling and interpolation
  - useful in approximation and compression
  - fundamental in communication systems


** Important Vector Space Classes
#+ATTR_LATEX: :options [leftmargin=5cm, labelwidth=4.7cm, itemindent=-2pt]
- $\mathbb{R}^2$, $\mathbb{R}^3$ :: Euclidean space, geomtery
- $\mathbb{R}^n$, $\mathbb{C}^n$  :: Linear algebra
- $\ell_2(\mathbb{Z})$ :: Space of square-summable infinite sequences
- $L_2([a,b])$ :: Space of square-integrable functions over an interval



*** Some Spaces can be drawn



#+begin_src octave :results file :exports none
  v1 = 5; % x-component
  v2 = 3; % y-component

  figure('Visible','off'); % no GUI
  hold on; grid on; axis equal;
  xlabel('X'); ylabel('Y');

  % Axis limits
  xlim([-1 9]);
  ylim([-1 5]);

    % X and Y axes
  plot([-1 9],[0 0],'r','LineWidth',2); % X-axis
  plot([0 0],[-1 5],'g','LineWidth',2); % Y-axis

  % Vector (arrow from origin)
  quiver(0,0,v1,v2,0,'b','LineWidth',2,'MaxHeadSize',0.1);

  % Labels
  text(9.2,0,'X','FontSize',12,'Color','r');
  text(0,5.2,'Y','FontSize',12,'Color','g');

  % Grid lines
  xticks(-1:1:9);
  yticks(-1:1:5);
  set(gca,'XGrid','on','YGrid','on');

  hold off;
  % Save as PNG
  print('./image/coord2d.png','-dpng','-r300');
  ans = "./image/coord2d.png";
#+end_src

#+RESULTS:
[[file:./image/coord2d.png]]

#+begin_export latex
\begin{minipage}[c]{0.45\textwidth}
\[
    \mathbf{v} =
    \begin{bmatrix}
      v_1 \\
      v_2
    \end{bmatrix}
    \in \mathbb{R}^2
\]
\end{minipage}
\hfill
\begin{minipage}[c]{0.45\textwidth}
\centering
\includegraphics[width=\linewidth]{./image/coord2d.png}
\end{minipage}
#+end_export


#+begin_src octave :results file :exports none
  v1 = 0.8; % x-component
  v2 = 0.5; % y-component
  v3 = 0.7; % z-component

  figure('Visible','off'); % no GUI
  hold on; grid on; axis equal;
  xlabel('X'); ylabel('Y'); zlabel('Z');

  % Axis limits
  xlim([-1 1]);
  ylim([-1 1]);
  zlim([-1 1]);

  % Draw X, Y, Z axes (color coded)
  plot3([-1 1],[0 0],[0 0],'r','LineWidth',2); % X-axis in red
  plot3([0 0],[-1 1],[0 0],'g','LineWidth',2); % Y-axis in green
  plot3([0 0],[0 0],[-1 1],'b','LineWidth',2); % Z-axis in blue

  % Vector (arrow from origin)
  quiver3(0,0,0,v1,v2,v3,0,'b','LineWidth',2,'MaxHeadSize',0.1);
  
  % Axis labels
  text(1.05,0,0,'X','FontSize',12,'Color','r');
  text(0,1.05,0,'Y','FontSize',12,'Color','g');
  text(0,0,1.05,'Z','FontSize',12,'Color','b');

  % Create grid points
  [xg, yg, zg] = meshgrid(-1:0.5:1, -1:0.5:1, -1:0.5:1);

  % Draw grid edges
  % plot3([xg(:) xg(:)]',[yg(:) yg(:)]',[ones(size(zg(:)))*-1 ones(size(zg(:)))*1]','k:');
  % plot3([xg(:) xg(:)]',[ones(size(yg(:)))*-1 ones(size(yg(:)))*1]',[zg(:) zg(:)]','k:');
  % plot3([ones(size(xg(:)))*-1 ones(size(xg(:)))*1]',[yg(:) yg(:)]',[zg(:) zg(:)]','k:');

  view(3); % 3D view
  hold off;

  % Save as PNG
  print('./image/coord3d.png','-dpng','-r300');
  ans = "./image/coord3d.png";
#+end_src

#+RESULTS:
[[file:./image/coord3d.png]]

#+begin_export latex
\begin{minipage}[c]{0.45\textwidth}
\[
    \mathbf{v} =
    \begin{bmatrix}
      v_1 \\
      v_2 \\
      v_3
    \end{bmatrix}
    \in \mathbb{R}^3
\]
\end{minipage}
\hfill
\begin{minipage}[c]{0.45\textwidth}
\centering
\includegraphics[width=\linewidth]{./image/coord3d.png}
\end{minipage}
#+end_export



** Operationl Definitions

** Formal properties of a vector space

** Measure and Compare Vectors


#+ATTR_LATEX: :options [logo=\bcbook, couleur=yellow!10, barre=snake, arrondi=0.1]{Inner Product}
 #+BEGIN_bclogo
Measure of similarity between vectors
 #+END_bclogo

#+ATTR_LATEX: :options [leftmargin=5cm, labelwidth=4.7cm, itemindent=-2pt]
- Inner Product :: 
  $\langle\mathbf{x},\mathbf{y}\rangle := \sum_{n=0}^{N-1}\,x_n\,y_n$ \\
  A vector space with an inner product is called an *inner product space*
- Inner Product in $\mathbb{R}^2$ ::
  $\langle\mathbf{x},\mathbf{y}\rangle = x_0y_0+x_1y_1 = \mathbf{x} + \mathbf{y} cos(\alpha)$
- Inner Product in $\mathbb{L}_{[-1,1]}$ :: $\langle\mathbf{x},\mathbf{y}\rangle = \int\limits_{-1}^{1} x(t) y(t) dt$
- Norm of a Vector :: 
  $\mathbf{v} := \langle\mathbf{v},\mathbf{v}\rangle = ||\mathbf{v}||^2$ \\
  self inner product 
- Orthogonal :: 
  $\langle\mathbf{p},\mathbf{q}\rangle = 0$ \\
  maximal different vectors\\
  inner product = 0
- Distance :: $d(x,y) = \mathbf{x} -\mathbf{y}_2$
  

** Some Examples

Not all vector spaces have got a graphical representation. The following table shows the
graphical representation of vector spaces

#+ATTR_LATEX: :caption \rowcolors[]{1}{yellow!5}{} :center t :align c | c
| graphical representation | no graphical respresentation |
| $\mathbb{R}^2$           | $\mathbb{C}^N$ for N>1       |
| $\mathbb{R}^3$           | $\mathbb{R}^N$ for N>3       |
| $\mathbb{L}_{[-1,1]}$    |                              |


#+BEGIN_SRC gnuplot :exports none :file image/smult.png
  # Reset all plotting variables to their default values.
  reset
  #set size square
  # Title
  set title "Scalar Multiplication in L_2[-1,1]"
  # Legend
  set key 6.1,1.3
  # Axes Label
  set xlabel "Phase (radians)"
  set ylabel "Amplitude"
  set grid
  # Axes ranges
  set xrange [0:2*pi]
  set yrange [-1.5:1.5]
  # Axes tics     
  set xtics ("0" 0,"0.5{/Symbol p}" pi/2, "{/Symbol p}" pi, "1.5{/Symbol p}" 1.5*pi, "2{/Symbol p}" 2*pi)
  set ytics 1
  # Draw a horizontal centreline.
  set xzeroaxis
  # curves
  f(x) = sin(x)
  # Plot the curve.
  plot f(x)  w l lw 2, 1.3*f(x) w l lw 2 
#+END_SRC
#+attr_latex: :options {0.6\textwidth} :float 
#+begin_minipage 
Scalar Multiplication in $\mathbb{L}_2[-1,1]$
#+end_minipage                                          
#+attr_latex: :options [c]{0.4\textwidth} :float right
#+begin_minipage
[[file:image/smult.png]]
 #+end_minipage

#+BEGIN_SRC gnuplot :exports none :file image/vadd.png
# Reset all plotting variables to their default values.
# reset
#set size square
# Title
set title "Summation in L_2[-1,1]"
# Legend
set key 6.1,1.3
# Axes Label
set xlabel "Phase (radians)"
set ylabel "Amplitude"
# Axes ranges
set xrange [0:2*pi]
set yrange [-1.5:1.5]
set grid
# Axes tics     
set xtics ("0" 0,"0.5{/Symbol p}" pi/2, "{/Symbol p}" pi, "1.5{/Symbol p}" 1.5*pi, "2{/Symbol p}" 2*pi)
set ytics 1
# Draw a horizontal centreline.
set xzeroaxis
# curves
f(x) = sin(x)
g(x) = 0.3*f(25*x)
# Plot the curve.
plot f(x) w l lw 2 , g(x)  w l lw 2 , f(x) + g(x)  w l lw 2 
#+END_SRC

#+attr_latex: :options {0.6\textwidth} :float 
#+begin_minipage latex 
Summation of two Vectors in $\mathbb{L}_2[-1,1]$
#+end_minipage                                          
#+attr_latex: :options [c]{0.4\textwidth} :float right
#+begin_minipage 
[[file:image/vadd.png]]
 #+end_minipage

#+BEGIN_SRC gnuplot :exports none :file image/iproduct_sin.png
 Reset all plotting variables to their default values.
# reset
#set size square
# Title
set title "Inner Product in L_2[-1,1]"
# Legend
set key 6.1,1.3
# Axes Label
set xlabel "Phase (radians)"
set ylabel "Amplitude"
# Axes ranges
set xrange [0:2*pi]
set yrange [-1.5:1.5]
set grid
# Axes tics     
set xtics ("0" 0,"0.5{/Symbol p}" pi/2, "{/Symbol p}" pi, "1.5{/Symbol p}" 1.5*pi, "2{/Symbol p}" 2*pi)
set ytics 1
# Draw a horizontal centreline.
set xzeroaxis
# curves
f(x) = sin(x)
g(x) = sin(x) * sin(x)
# Plot the curve.
plot f(x) w l lw 2 , g(x)  w filledcurve l lw 2
#+END_SRC

#+attr_latex: :options {0.6\textwidth} :float 
#+begin_minipage latex
Inner Product in $\mathbb{L}_2[-1,1]$ - The Norm: \\
\text{with }x = sin(\pi\,t)
\begin{align*}
  \langle{\mathbf{x},\mathbf{x}}\rangle
  &= ||\mathbf{x}||^2 \\
  &= \int\limits_{-1}^{1} sin^2(\pi)dt = 1
\end{align*}
#+end_minipage                                          
#+attr_latex: :options [c]{0.4\textwidth} :float right
#+begin_minipage
[[file:image/iproduct_sin.png]]
#+end_minipage

** Hilbert Space
A hilbert space is  an *inner product space* which fulfills completeness. 

** Signal Spaces
Finite length signal live in $\mathbb{C}^{N}$
- all operations well defined and intuitive
- space of N-periodic signals sometimes indicated by $\tilde{\mathbb{C}}^{ N}$  
** TODO Vecotor Bases
** TODO Subspace Approximations
*** Least-Square Approximation
Consider a orthonormal basis for subspace S, called S of K
#+begin_src latex
  \begin{equation*}
    {s-{(k)}}_{k=0,1..,k-1} \text{ orthonormal basis for S }
  \end{equation*}
#+end_src

orthonormal projection is defined as follows:

#+begin_src latex
  \begin{equation*}
    \hat{x} = \sum_{k=0}^{k-1}\langle{s^{(k)},x\rangle}s^{(k)}
  \end{equation*}
#+end_src

- orthogonal projection has minimum-norm error:
  #+begin_src latex 
    \begin{equation*}
        arg \; min ||x-y|| = \hat{x}
    \end{equation*}
  #+end_src

- :
#+begin_src latex 
  \begin{equation*}
       \langle{x-\hat{x},\hat{x}\rangle}= 0
  \end{equation*}
 #+end_src
\newpage
